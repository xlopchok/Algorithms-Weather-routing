import pandas as pd
import numpy as np

import geopandas as gpd

import matplotlib.pyplot as plt
import seaborn as sns

import folium
from folium.plugins import MousePosition

import shapely
from shapely.geometry import Point, MultiPoint, Polygon, MultiPolygon, LineString, MultiLineString
from shapely.geometry import LinearRing
from shapely.ops import unary_union
from shapely.validation import make_valid

from scipy.spatial import ConvexHull

gybraaltar = Polygon([[-9.819256969557983, 38.95234633159242],
 [-12.924295990656333, 39.03395556554722],
 [-14.049310128734504, 31.97260127739314],
 [-10.07426017418993, 31.883485314420184],
 [-9.594254141942997, 32.833781502160534],
 [-8.649242265956758, 33.823875223401004],
 [-7.389226431307861, 34.18449219946005],
 [-6.879220022045587, 34.555928815546864],
 [-6.234211916213496, 35.74556755151265],
 [-5.892848166784773, 35.88523092775063],
 [-5.27574439669408, 35.97832289958636],
 [-5.160798141015732, 35.85093147635902],
 [-4.906706976720415, 35.51678527490925],
 [-4.544054140339682, 35.285080653575875],
 [-3.5459890731640087, 35.33936921334592],
 [-3.18944769206891, 35.39430394876199],
 [-2.9776701859141212, 35.532264414545196],
 [-2.6993799675987304, 35.438668196746406],
 [-2.4997369099376385, 35.26596900270694],
 [-1.6530541770808043, 35.285766756223964],
 [-0.8874143697973693, 35.93832585000169],
 [1.0058486054083744, 36.57498405246173],
 [3.7582214279984214, 37.00599646671313],
 [5.058548375543978, 36.99347499055479],
 [5.215846860454235, 36.82902053698294],
 [6.020418691247016, 37.01279345978642],
 [6.4076514621603735, 37.244323132578685],
 [6.812881192532728, 37.09486554342948],
 [7.363518223081712, 37.24913898615014],
 [7.986557337542308, 36.9838074739713],
 [9.86808726324665, 37.48932961767987],
 [10.403573637442264, 37.30421445308539],
 [10.600516851839018, 37.02957012250339],
 [11.166728593232477, 37.19643750841722],
 [11.314436004030028, 36.84263651342283],
 [10.822077968036751, 36.25924264633814],
 [11.191346495032036, 35.841268930646294],
 [11.314436004030028, 35.10952869969991],
 [11.877028359404846, 33.24486369925168],
 [15.45893307125877, 32.61465624162908],
 [15.93902964497542, 31.636108314063335],
 [17.8099902554261, 31.23702536566212],
 [19.065503247209506, 30.66699804997765],
 [19.742495546701747, 30.962992355467122],
 [19.54555233230363, 32.2627628401675],
 [21.680040991825763, 33.1412936332694],
 [23.68639998850017, 32.83155203349111],
 [25.57789300214725, 32.00028692052307],
 [29.209033517598954, 31.18248200501246],
 [30.607017436782456, 31.97377826104787],
 [32.970336009551716, 31.450219603263648],
 [34.15657786393345, 31.792563150113466],
 [35.67735392300111, 35.00026762449913],
 [35.59514981170042, 36.037312793870086],
 [35.184129255194904, 35.97081170441602],
 [34.07437375263285, 34.561405796965545],
 [32.55359750107172, 34.34110107635367],
 [31.97816872196489, 35.202030387838704],
 [32.738556751499345, 35.38654038584973],
 [32.944067029750954, 35.70424712144421],
 [33.663353003634995, 35.63746613355224],
 [34.485394116643704, 35.837641374320384],
 [35.101924951400804, 36.17014661016441],
 [34.4237410331682, 36.368975791928676],
 [34.033271504488994, 36.02069278298326],
 [32.86186291845027, 35.837641374320384],
 [31.875413582839116, 36.203319956822966],
 [31.3410868593827, 36.616799417791356],
 [30.662902941150094, 36.17014661016441],
 [30.0874741620444, 35.9541776731526],
 [28.99826968730636, 36.03731279687729],
 [28.669453242102662, 36.43513961159394],
 [28.011820351695178, 35.68755711273634],
 [27.43773761449006, 36.100495068027826],
 [26.943603432087002, 36.4987320870804],
 [26.467437765407567, 36.37585780971074],
 [25.2904999855011, 36.16580019274565],
 [24.643633419446076, 36.48428638879385],
 [24.068640916285858, 36.5564879320724],
 [24.176452010628026, 37.045668340537446],
 [24.05067240056215, 37.51033944130123],
 [23.61044376533016, 37.303379083607794],
 [23.16123087223579, 36.96674817780816],
 [23.35888454519744, 36.22380355478775],
 [23.772160406843398, 35.78773258131851],
 [25.16472037543525, 35.714819861264175],
 [26.027209130175578, 35.67104017538658],
 [26.521343312580086, 35.30527633468745],
 [26.512359054717734, 34.91575327419805],
 [25.488153658464142, 34.74613654083642],
 [24.095593689872317, 34.59836001143775],
 [22.873734620657103, 35.48836635377802],
 [21.88781207863559, 36.49141809991433],
 [20.369472499977974, 37.681094210809476],
 [19.987045074320037, 38.79421473850485],
 [19.657043533570402, 39.45748555756782],
 [19.16204122244676, 39.82710615535211],
 [19.23704157261676, 40.12596670390627],
 [18.847039751731927, 41.18424426908712],
 [19.102040859599384, 41.64545432351443],
 [17.692034276398488, 42.5911763519627],
 [16.74702994692163, 42.668429839793305],
 [15.832025674844346, 43.00939978773829],
 [16.015119707190564, 43.28291737084771],
 [15.580117676202889, 43.67475649433976],
 [15.010115014909275, 43.72897758920527],
 [14.155111022968015, 44.58984341456778],
 [13.750109132048351, 44.728547507522194],
 [13.345107241129597, 45.490746597800296],
 [12.91010521014195, 45.39602834355824],
 [12.580103669392315, 45.21668218564491],
 [12.790104649869107, 44.515019162145535],
 [12.940105350209905, 44.08560672504191],
 [14.125110882900032, 43.348400343436055],
 [14.350111933410858, 42.624208626097385],
 [15.250116135454078, 42.03648950522489],
 [16.360121317973324, 42.02534769874984],
 [16.180120477564515, 41.52194637098464],
 [17.155125029778617, 41.24057302971221],
 [17.920128601515103, 40.844606770537325],
 [18.460131122740705, 40.560316296375646],
 [18.723147993705084, 40.030002198060686],
 [18.66314771356906, 39.75378943512379],
 [18.258145822649425, 39.557465772845575],
 [17.823143791661806, 39.86901334646859],
 [17.52314239098098, 40.09888139978659],
 [17.043140149891315, 40.22497900728257],
 [16.803139029346482, 39.90354285027652],
 [17.178140780198163, 39.5805916111633],
 [17.43314197077703, 39.13988298797065],
 [17.16314071016336, 38.69639822375507],
 [16.893139449550517, 38.46187321888735],
 [16.212655611230048, 37.773464687915606],
 [15.597652739834416, 37.73788622136966],
 [15.327651479221572, 36.566282779419225],
 [14.712648607825116, 36.43364577900711],
 [12.777639573432594, 37.35731927035094],
 [12.147636632002161, 37.80902604210485],
 [11.81763509125335, 37.96292736815127],
 [12.37263768251296, 38.28153962657308],
 [13.302642024624248, 38.410945692264136],
 [14.592648047553126, 38.305085197314895],
 [14.682648467757105, 38.64563661991153],
 [15.147650638812735, 38.96125379410705],
 [15.447652039493562, 39.21738859511231],
 [14.787648957995088, 40.11798957181142],
 [12.67263908319461, 41.22153848332425],
 [11.17262702164561, 42.18462855330722],
 [10.49762387011316, 42.3067733771214],
 [9.957621348887557, 42.737925706275234],
 [9.972621418921534, 43.32999023168145],
 [9.792620578512668, 43.840653559400494],
 [9.1926177771511, 44.175102350486696],
 [8.712615536061492, 44.228869079218214],
 [8.097612664665007, 43.710683294921125],
 [7.017607622213745, 43.20984783294122],
 [7.902611754223045, 40.8368048475383],
 [8.29261357510785, 41.289196645251366],
 [8.712615536061492, 41.424307001533435],
 [8.307613645141856, 42.3067733771214],
 [8.697615466027486, 42.86998917151635],
 [9.372618617559937, 43.133270115478325],
 [9.61261973810474, 43.04563516435064],
 [9.747620368410736, 42.21796423059439],
 [9.552619457967921, 41.54791171372227],
 [10.049016557421368, 40.75969536577381],
 [9.974016207251367, 39.9136077749277],
 [9.681064497063431, 38.84907248455761],
 [8.736060084918165, 38.57987780795679],
 [8.121057129220844, 38.954133369040676],
 [7.720662806576513, 39.67365418587505],
 [7.960663927121345, 40.19124355753999],
 [8.06566441735933, 41.27104508101621],
 [7.255427784235934, 43.31156255172647],
 [6.2954233020566335, 42.9063823100974],
 [5.245418399673412, 42.91736838825693],
 [4.2104135673233145, 43.30064700559936],
 [3.640410906029672, 43.03808598654692],
 [3.550410681311149, 42.35458277045632],
 [3.5804108213800134, 41.629937716578496],
 [4.592344642621384, 39.574784921095954],
 [3.9023414210549277, 39.7595293329303],
 [3.497339530135264, 39.5400903659455],
 [3.3473387836239397, 39.122403457166996],
 [2.734023169294204, 38.85438744527886],
 [1.594017846706123, 38.409118394681315],
 [0.9640149052764855, 38.53829640326845],
 [0.8890145551056605, 38.98276450268932],
 [1.2790163759913185, 39.33170209178164],
 [1.8790191773529443, 39.58648869054451],
 [2.4490218386473828, 40.03586085508553],
 [2.899023939669007, 40.104734136073944],
 [3.4990267410306615, 40.173537760080166],
 [3.93402877201828, 40.2651675206308],
 [4.339030697759711, 40.29949670088271],
 [3.694027686295243, 41.93789715048419],
 [1.534017601391838, 40.88042305107541],
 [0.8140142397573982, 40.184998229434854],
 [0.1990113683617949, 39.308493416668114],
 [0.41114237593302505, 38.71763221840095],
 [0.036140625081372946, 38.24795596510472],
 [-0.503861896144258, 37.72778439257087],
 [-1.118864767540714, 37.35908946488412],
 [-1.9574985209864337, 36.61588186501697],
 [-3.172504193744544, 36.47126850586358],
 [-4.192508956059811, 36.42300396372224],
 [-5.032512877967093, 36.24174470506135],
 [-5.2569153158260065, 36.14834461858423],
 [-5.3773835053472965, 36.04710458870876],
 [-5.647247557301142, 35.96914352320442],
 [-6.066493298145275, 36.140561755022276],
 [-6.628456638878816, 36.400081556618744],
 [-7.16715655061779, 36.847163455646054],
 [-8.103759806252498, 36.77364722063426],
 [-8.978638645336105, 36.87646611006551],
 [-9.443957522950598, 37.25681444753903],
 [-9.223280524475513, 38.025349560282336],
 [-9.819256969557983, 38.95234633159242]])

dubai = Polygon([[59.80330455173552, 25.11490111457175],
 [58.58946165900272, 25.364930768253444],
 [57.7481844066142, 25.495176335924967],
 [57.08718085116618, 25.72276639651912],
 [56.96699838653825, 26.176639709980407],
 [56.87085241483709, 26.671718327540745],
 [56.71461521082185, 26.854142151093185],
 [56.426177295716826, 26.779061938862526],
 [56.13773938061314, 26.682457243622054],
 [55.849301465508034, 26.542772543498145],
 [55.416644592851156, 26.467487120664615],
 [54.899859994954994, 26.3275406574042],
 [54.262892932432294, 26.27366996728817],
 [53.541798144670366, 26.467487120664615],
 [53.012995300312184, 26.757601319536477],
 [52.30391875901219, 27.036272366428747],
 [52.82070335690835, 24.471186124141056],
 [53.48170691235643, 24.449306936016413],
 [53.92638203147661, 24.624233849243964],
 [54.40711188998415, 24.86435896358556],
 [54.82775051617904, 25.169299111843017],
 [55.20031615652201, 25.440924459553898],
 [55.46471757870174, 25.64695120611782],
 [55.849301465508034, 26.057937412139424],
 [56.149757627075104, 26.402917528827302],
 [56.3660860634042, 26.49975834230493],
 [56.57039625327005, 26.381386295914297],
 [56.49828677449409, 25.69028008032305],
 [56.71461521082185, 24.82073437684643],
 [57.05112611177756, 24.241265518866456],
 [58.204877772196426, 23.96700809118815],
 [59.34661118615327, 23.43879881492427],
 [59.80330455173552, 25.11490111457175]])

suatsly_kanal = Polygon([[50.03069773332794, 14.549482042810865],
 [49.142623539186474, 14.098745334994248],
 [48.11948873778141, 13.625724821177258],
 [47.398420486131386, 13.369894467262199],
 [46.4532276295316, 13.199190643301279],
 [45.71103859709342, 13.105145284691417],
 [45.13619242881214, 12.50659722954589],
 [44.083931646197186, 12.42097542622642],
 [43.518828167417354, 12.51610933076968],
 [43.401910669559385, 12.725279236354126],
 [43.25576203906121, 13.086166391229042],
 [43.09012979594945, 13.617033030724315],
 [42.83530659628988, 14.632012181291074],
 [42.65993457776099, 15.187480530005558],
 [42.59173522700209, 15.638312913167866],
 [42.650190923691326, 16.16302969317411],
 [42.448082429934146, 16.682443967817036],
 [42.13631355130951, 17.36250287428608],
 [41.853773394192615, 17.511223918880006],
 [41.619946626674846, 17.771192367352597],
 [41.19126469925371, 18.160435727309405],
 [40.95743819338887, 18.75189892202812],
 [40.73335445860002, 19.43319976720825],
 [38.73608638766379, 18.086360370986142],
 [39.17166526694194, 17.046965214677854],
 [39.75622986030976, 16.711338632376254],
 [40.30182504066329, 16.58065594673397],
 [40.4479666068294, 15.897814438717191],
 [40.651005568794034, 15.121627063923313],
 [41.2355753226868, 14.782761226915312],
 [41.742202028228746, 14.075103106743256],
 [42.14165780940937, 13.848183363859278],
 [42.48425246215146, 13.380537220829723],
 [42.89344854838902, 13.16243837738591],
 [43.386551974854854, 12.518730451577781],
 [43.50346985331461, 12.033208371268984],
 [43.37680875992899, 11.699503112492764],
 [43.854204542738074, 11.05957330874324],
 [44.399799723090496, 10.667279038155883],
 [44.90642381913324, 10.667279038155883],
 [45.76378759810851, 11.002196669932118],
 [46.69909336957696, 10.99263279043511],
 [47.74070591087536, 11.515706243196092],
 [51.282559929603394, 12.352150573672276],
 [50.03069773332794, 14.549482042810865]])

London = Polygon([[6.934009759140281, 53.90085532459216],
 [4.0478641045047254, 55.875442909430234],
 [-0.7553564010220271, 54.99099854314548],
 [0.6139827781859992, 53.32598440781149],
 [1.899054930979247, 52.80698332769899],
 [1.9076653326288806, 52.34808772352255],
 [1.807583971134136, 52.1308009580176],
 [1.708287936776344, 51.90291916329966],
 [1.2533801951359465, 51.67214130021355],
 [1.2533803444981118, 51.530857213767064],
 [1.60822372374912, 51.44587473336824],
 [1.5366192624996984, 51.209106129421855],
 [1.2776527519500576, 50.98039418242584],
 [0.9053937121229865, 50.78126201097575],
 [0.09611657459288381, 50.66342465400507],
 [-0.5432151405880177, 50.699319704163145],
 [-0.8912058210021314, 50.606962663704365],
 [-1.4496094709705574, 50.50413068677548],
 [-2.056569960066412, 50.50413068677548],
 [-2.8658506121940093, 50.43716957240102],
 [-3.251310300001677, 50.458434448459656],
 [-3.7045054239040667, 50.07044469989938],
 [-4.50569356991096, 50.21566547466867],
 [-5.209766825761051, 49.84134946049258],
 [-6.019048389389383, 50.10679124499242],
 [-7.558573374572603, 50.898529412146274],
 [-9.371228687701972, 49.21161990786322],
 [-8.738624148891148, 48.03767163342229],
 [-7.084119970464457, 47.55550879400877],
 [-5.502608623438704, 47.596543615967136],
 [-5.380953904437121, 48.297313294804695],
 [-4.906500692859993, 48.74852592823518],
 [-4.018429051063691, 48.79663518383441],
 [-3.1425070748002213, 48.95665182470245],
 [-2.6193966279261076, 48.79663305874382],
 [-2.0597852017978937, 48.79663294476532],
 [-1.7921483666721088, 48.80464685131784],
 [-1.86513835248428, 49.14800151362405],
 [-2.0232838023251247, 49.44946423900785],
 [-2.0841107479243703, 49.77266128759584],
 [-1.2323325631795399, 49.799125626523676],
 [-1.0219234440216098, 49.55824185517693],
 [-0.8034151788793338, 49.46891713781014],
 [-0.3825905754144685, 49.42156166438633],
 [-0.13171436950335647, 49.42156166438633],
 [-0.026508218637161463, 49.59497485307921],
 [0.15962574058730183, 49.84089673039125],
 [0.5356543637834363, 49.907327976059946],
 [0.9807561025896803, 49.990644064917404],
 [1.2640013116477462, 50.12572756412305],
 [1.401623840108556, 50.32247790291402],
 [1.4420769797691264, 50.52870553336743],
 [1.4825257513012389, 50.744275806895985],
 [1.620105791318565, 50.92826736089313],
 [1.7901927078253834, 51.06629425892163],
 [2.1220385712544214, 51.08155017513644],
 [2.494351860161885, 51.18313050537242],
 [2.907121094840903, 51.33002524368854],
 [3.4008524742326927, 51.451238817616],
 [3.238977364576897, 51.592248826448525],
 [3.5060712955088036, 51.65756939388214],
 [3.651758894198167, 51.85296720702229],
 [3.9512278470610056, 52.08732430316434],
 [4.243675389944514, 52.22676621127616],
 [4.373159883317726, 52.40486461832276],
 [4.486458815020228, 52.78339497780661],
 [4.535015500035229, 53.08581270873256],
 [4.815338478174425, 53.33524937535961],
 [5.373740379517045, 53.552155982128966],
 [6.361059641491607, 53.66738704372642],
 [6.934009759140281, 53.90085532459216]])

def shift_geoms(geom, shift_x = 360, shift_y = 0):
    shifted_geoms_left = []
    shifted_geoms_right = []
    for x, y in geom.coords:
        shifted_geoms_left.append((x + shift_x, y + shift_y))
        shifted_geoms_right.append((x - shift_x, y - shift_y))
    shifted_geoms = unary_union([Polygon(shifted_geoms_right), Polygon(shifted_geoms_left), Polygon(geom)])
    return shifted_geoms

def outside_map(full_world, min_dist = 1, max_dist = 18.5, window = None, L = True, SK = True, D = True, G = True):
    if window == None:
        window = Polygon([
            Point(-540, -90),
            Point(540, -90),
            Point(540, 90),
            Point( -540, 90)
        ])

    min_distance_map = full_world.buffer(min_dist)
    max_distance_map = full_world.buffer(max_dist)
    result = max_distance_map.difference(min_distance_map)
    result = window.intersection(result)
    if L:
        lond = shift_geoms(London.boundary)
        result = unary_union([result, lond])
    if SK:
        sk = shift_geoms(suatsly_kanal.boundary)
        result =  unary_union([result, sk])
    if D:
        dub = shift_geoms(dubai.boundary)
        result =  unary_union([result, dub])
    if G:
        gybr = make_valid(gybraaltar) if not gybraaltar.is_valid else gybraaltar
        gyb_bound = gybr.boundary
        if gyb_bound.geom_type == 'LineString':
            gyb = shift_geoms(gyb_bound)
            result =  unary_union([result, gyb])
        elif gyb_bound.geom_type == 'MultiLineString':
            for line in gyb_bound.geoms:
                gyb = shift_geoms(line)
                result =  unary_union([result, gyb])
    return result

def create_ocean_map(
        data_path = 'https://raw.githubusercontent.com/python-visualization/folium-example-data/main/world_countries.json',
        min_dist = 1,
        max_dist = 18.5,
        window = None,
        L = True,
        SK = True,
        D = True,
        G = True,
):
    geojson_data = gpd.read_file(data_path)
    all_geoms = geojson_data.geometry.apply(lambda geom: make_valid(geom) if not geom.is_valid else geom)
    world = unary_union(list(all_geoms))
    shifted_geoms = []
    for geom in world.geoms:

        if geom.geom_type == 'Polygon':
            boundary_of_polygon = geom.boundary
            if boundary_of_polygon.geom_type == 'LineString':
                shifted_geoms.append(shift_geoms(boundary_of_polygon))

            elif boundary_of_polygon.geom_type == 'MultiLineString':
                for line in boundary_of_polygon.geoms:
                    shifted_geoms.append(shift_geoms(line))

        elif geom.geom_type == 'MultiPolygon':
            for polygon in geom.geoms:
                boundary_of_polygon = polygon.boundary
                if boundary_of_polygon.geom_type == 'LineString':
                    shifted_geoms.append(shift_geoms(boundary_of_polygon))

                elif boundary_of_polygon.geom_type == 'MultiLineString':
                    for line in boundary_of_polygon.geoms:
                        shifted_geoms.append(shift_geoms(line))

    full_world = unary_union(shifted_geoms)
    result = outside_map(full_world = full_world, min_dist = min_dist, max_dist = max_dist)

    if not result.is_valid:
        result = make_valid(result)
    return result

Ocean_map = create_ocean_map()

def visualisation_Map(Ocean_map = Ocean_map):
  m = folium.Map(tiles="cartodbpositron")
  
  folium.GeoJson(Ocean_map).add_to(m)
  
  folium.Marker((54, 3), tooltip="inside_point").add_to(m)
  folium.Marker((65, 70), tooltip="outside_point").add_to(m)
  
  folium.LayerControl().add_to(m)
  
  MousePosition().add_to(m)
  return m
  
if __name__ == "__main__":
    map_object = visualisation_Map(Ocean_map)
    map_file = "Ocean_map.html"
    map_object.save(map_file)
    webbrowser.open(map_file)
